00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 5/18/16 7:34:22 PM

00000000                             1  * ORG     $400
00000000                             2  
00000000                             3  * D6 is mode, D7 is register 
00000000                             4  * Dn, An, (An), (An)+, -(An)
00000000                             5  * Jumps based on mode
00000000                             6  
00000000                             7  * Consider the next instruction. Why do we have to multiply the index 
00000000                             8  
00000000                             9  * by 6? How many bytes does a single jump table entry require? 
00000000                            10  *example          EQU     %0000011000000110
00000000                            11  *                 MOVEA.W    #$7000, A5
00000000                            12  *                 MOVE.L    #$10342035, (A5)
00000000                            13  
00000000                            14  *start 
00000000                            15  *               MOVE.B      #%010,D6         *MODE
00000000                            16  *               
00000000                            17  *               MOVE.B      #%111,D7         *REGISTER
00000000                            18  
00000000                            19  print_ea
00000000                            20                 
00000000  41F9 0000000E             21                 LEA     jmp_table_ea,A0      *Index into the table
00000006                            22  
00000006  CCFC 0006                 23                 MULU        #6,D6            *Form offset     
0000000A                            24  
0000000A  4EF0 6000                 25                 JMP         0(A0,D6)         *Jump indirect with index
0000000E                            26  
0000000E                            27                      
0000000E                            28  
0000000E  4EF9 00000044             29  jmp_table_ea   JMP         code000
00000014                            30  
00000014  4EF9 00000048             31                 JMP         code001
0000001A                            32  
0000001A  4EF9 0000004C             33                 JMP         code010
00000020                            34  
00000020  4EF9 00000050             35                 JMP         code011
00000026                            36  
00000026  4EF9 00000054             37                 JMP         code100
0000002C                            38  
0000002C  4EF9 00000058             39                 JMP         code101
00000032                            40  
00000032  4EF9 0000005C             41                 JMP         code110
00000038                            42  
00000038  4EF9 00000060             43                 JMP         code111
0000003E                            44                 
0000003E  4EF9 00000064             45                 JMP         RETURN
00000044                            46          
00000044                            47  
00000044                            48   
00000044                            49  
00000044                            50  *The following subroutines will get filled in as you decode the instructions . For *now, just exit gracefully.
00000044                            51  
00000044                            52   
00000044                            53  
00000044                            54   
00000044                            55  
00000044  6000 0020                 56  code000       BRA         DATA_REGISTER
00000048                            57  
00000048  6000 003C                 58  code001       BRA         ADDRESS_REGISTER
0000004C                            59  
0000004C  6000 0054                 60  code010       BRA         INDIRECT_ADDRESS
00000050                            61  
00000050  6000 007A                 62  code011       BRA         ADDRESS_PI    * post increment
00000054                            63  
00000054  6000 00A0                 64  code100       BRA         ADDRESS_PD    * pre decrement
00000058                            65  
00000058  6000 00C6                 66  code101       BRA         ADDRESS_W_DISPLACEMENT
0000005C                            67  
0000005C  6000 00C2                 68  code110       BRA         ADDRESS_W_INDEX
00000060                            69  
00000060  6000 00BE                 70  code111       BRA         GROUP_111
00000064                            71  
00000064  4E75                      72  RETURN        RTS
00000066                            73  
00000066                            74   
00000066                            75  DATA_REGISTER
00000066                            76  
00000066  43F9 000002D6             77              LEA D_REGISTER, A1
0000006C                            78              
0000006C  4280                      79              CLR.L D0
0000006E                            80              
0000006E  103C 000E                 81              MOVE.B #14, D0
00000072                            82              
00000072  4E4F                      83              TRAP #15                * print out 'D' for data register
00000074                            84              
00000074  4281                      85              CLR.L D1
00000076                            86              
00000076  1207                      87              MOVE.B D7, D1
00000078                            88              
00000078  103C 0003                 89              MOVE.B #3, D0           * print out the number in the register
0000007C                            90              
0000007C  4E4F                      91              TRAP #15
0000007E                            92              
0000007E  1C3C 0008                 93              MOVE.B  #8, D6
00000082                            94              
00000082  6000 011C                 95              BRA DONE
00000086                            96              
00000086                            97  
00000086                            98  ADDRESS_REGISTER
00000086  43F9 000002D8             99              LEA A_REGISTER, A1
0000008C                           100              
0000008C  4280                     101              CLR.L D0
0000008E                           102              
0000008E  103C 000E                103              MOVE.B #14, D0          * print out the 'A' for address register
00000092                           104              
00000092  4E4F                     105              TRAP #15
00000094                           106              
00000094  4281                     107              CLR.L D1
00000096                           108              
00000096  1207                     109              MOVE.B D7, D1
00000098                           110              
00000098  103C 0003                111              MOVE.B #3, D0
0000009C                           112              
0000009C  4E4F                     113              TRAP #15                * print out the value in the data register
0000009E                           114  
0000009E  6000 0100                115              BRA DONE
000000A2                           116              
000000A2                           117  INDIRECT_ADDRESS
000000A2  43F9 000002DA            118              LEA IA_START, A1
000000A8                           119              
000000A8  4280                     120              CLR.L D0
000000AA                           121              
000000AA  103C 000E                122              MOVE.B #14, D0          * print out the '(A' for start of indirect address register
000000AE                           123              
000000AE  4E4F                     124              TRAP #15
000000B0                           125              
000000B0  4281                     126              CLR.L D1
000000B2                           127              
000000B2  1207                     128              MOVE.B D7, D1
000000B4                           129              
000000B4  103C 0003                130              MOVE.B #3, D0
000000B8                           131              
000000B8  4E4F                     132              TRAP #15                * print out the value in the data register
000000BA                           133              
000000BA  43F9 000002DD            134              LEA IA_END, A1
000000C0                           135  
000000C0  4280                     136              CLR.L D0
000000C2                           137              
000000C2  103C 000E                138              MOVE.B #14, D0          * print out the ')' for end of post increment address register
000000C6                           139              
000000C6  4E4F                     140              TRAP #15
000000C8                           141              
000000C8  6000 00D6                142              BRA DONE
000000CC                           143  
000000CC                           144  ADDRESS_PI
000000CC  43F9 000002DF            145              LEA A_PI_START, A1
000000D2                           146              
000000D2  4280                     147              CLR.L D0
000000D4                           148              
000000D4  103C 000E                149              MOVE.B #14, D0          * print out the '(A' for start of post increment address register
000000D8                           150              
000000D8  4E4F                     151              TRAP #15
000000DA                           152              
000000DA  4281                     153              CLR.L D1
000000DC                           154              
000000DC  1207                     155              MOVE.B D7, D1
000000DE                           156              
000000DE  103C 0003                157              MOVE.B #3, D0
000000E2                           158              
000000E2  4E4F                     159              TRAP #15                * print out the value in the data register
000000E4                           160              
000000E4  43F9 000002E2            161              LEA A_PI_END, A1
000000EA                           162  
000000EA  4280                     163              CLR.L D0
000000EC                           164              
000000EC  103C 000E                165              MOVE.B #14, D0          * print out the ')+' for end of post increment address register
000000F0                           166     
000000F0  4E4F                     167              TRAP #15
000000F2                           168              
000000F2  6000 00AC                169              BRA DONE  
000000F6                           170         
000000F6                           171  ADDRESS_PD
000000F6                           172  
000000F6  43F9 000002E5            173              LEA A_PD_START, A1
000000FC                           174              
000000FC  4280                     175              CLR.L D0
000000FE                           176              
000000FE  103C 000E                177              MOVE.B #14, D0          * print out the '-(A' for start of pre decrement address register
00000102                           178              
00000102  4E4F                     179              TRAP #15
00000104                           180              
00000104  4281                     181              CLR.L D1
00000106                           182              
00000106  1207                     183              MOVE.B D7, D1
00000108                           184              
00000108  103C 0003                185              MOVE.B #3, D0
0000010C                           186              
0000010C  4E4F                     187              TRAP #15                * print out the value in the data register
0000010E                           188              
0000010E  43F9 000002E9            189              LEA A_PD_END, A1
00000114                           190  
00000114  4280                     191              CLR.L D0
00000116                           192              
00000116  103C 000E                193              MOVE.B #14, D0          * print out the ')-' for end of pre decrement
0000011A                           194  
0000011A  4E4F                     195              TRAP #15
0000011C                           196              
0000011C  6000 0082                197              BRA DONE
00000120                           198              
00000120                           199  ADDRESS_W_DISPLACEMENT
00000120                           200  
00000120                           201  ADDRESS_W_INDEX
00000120                           202  
00000120                           203  GROUP_111
00000120                           204  
00000120  41F9 0000012E            205                 LEA     jmp_table_ea_111,A0    *Index into the table
00000126                           206  
00000126  CEFC 0006                207                 MULU        #6,D7       *Form offset     
0000012A                           208  
0000012A  4EF0 7000                209                 JMP         0(A0,D7)   *Jump indirect with index
0000012E                           210                 
0000012E                           211  jmp_table_ea_111   
0000012E  4EF9 00000154            212                 JMP         reg000
00000134                           213  
00000134  4EF9 00000158            214                 JMP         reg001
0000013A                           215  
0000013A  4EF9 0000014C            216                 JMP         reg010
00000140                           217  
00000140  4EF9 00000150            218                 JMP         reg011
00000146                           219  
00000146  4EF9 0000015C            220                 JMP         reg100
0000014C                           221          
0000014C                           222  
0000014C  6000 0012                223  reg010       BRA         PC_W_DISPLACEMENT
00000150                           224  
00000150  6000 000E                225  reg011       BRA         PC_W_INDEX
00000154                           226  
00000154  6000 000A                227  reg000       BRA         ABSOLUTE_SHORT
00000158                           228  
00000158  6000 0024                229  reg001       BRA         ABSOLUTE_LONG
0000015C                           230  
0000015C  6000 003E                231  reg100       BRA         IMMEDIATE
00000160                           232  
00000160                           233  
00000160                           234  PC_W_DISPLACEMENT
00000160                           235  
00000160                           236  PC_W_INDEX
00000160                           237  
00000160                           238  ABSOLUTE_SHORT
00000160  43F9 000002D4            239              LEA         HEX_SIGN, A1
00000166                           240              
00000166  103C 000E                241              MOVE.B      #14, D0
0000016A                           242              
0000016A  4E4F                     243              TRAP #15
0000016C                           244              
0000016C  4281                     245              CLR.L       D1
0000016E                           246              
0000016E  321D                     247              MOVE.W      (A5)+, D1
00000170                           248              
00000170  103C 000F                249              MOVE.B      #15, D0
00000174                           250              
00000174  143C 0010                251              MOVE.B      #16, D2
00000178                           252              
00000178  4E4F                     253              TRAP #15
0000017A                           254              
0000017A  6000 0024                255              BRA DONE  
0000017E                           256  
0000017E                           257  
0000017E                           258  ABSOLUTE_LONG
0000017E  43F9 000002D4            259              LEA         HEX_SIGN, A1
00000184                           260              
00000184  103C 000E                261              MOVE.B      #14, D0
00000188                           262              
00000188  4E4F                     263              TRAP #15
0000018A                           264              
0000018A  4281                     265              CLR.L       D1
0000018C                           266              
0000018C  221D                     267              MOVE.L      (A5)+, D1
0000018E                           268              
0000018E  103C 000F                269              MOVE.B      #15, D0
00000192                           270              
00000192  143C 0010                271              MOVE.B      #16, D2
00000196                           272              
00000196  4E4F                     273              TRAP #15
00000198                           274                          
00000198  6000 0006                275              BRA DONE  
0000019C                           276  
0000019C                           277  
0000019C                           278  IMMEDIATE
0000019C                           279  
0000019C  6000 0002                280              BRA DONE  
000001A0                           281  
000001A0                           282  DONE
000001A0  4E75                     283      RTS
000001A2                           284      
000001A2                           285    INCLUDE 'MESSAGE_Data.X68'
000001A2                           286  
000001A2  =0000000D                287  CR  EQU $0D
000001A2  =0000000A                288  LF  EQU $0A 
000001A2                           289  
000001A2= 57 65 6C 63 6F 6D ...    290  WELCOME_MESSAGE DC.B 'Welcome to our Team wild pokemon disassembly!!', CR, LF, 0
000001D3= 45 6E 74 65 72 20 ...    291  STARTING        DC.B 'Enter the starting location: ', 0
000001F1= 45 6E 74 65 72 20 ...    292  ENDING          DC.B 'Enter the ending locaiton: ', 0
0000020D                           293      
0000020D= 41 44 44 49 2E 00        294  ADDI_MESSAGE    DC.B 'ADDI.',0
00000213= 4D 4F 56 45 41 2E 00     295  MOVEA_MESSAGE   DC.B 'MOVEA.',0
0000021A= 4D 4F 56 45 2E 00        296  MOVE_MESSAGE    DC.B 'MOVE.',0
00000220= 4E 4F 50 00              297  NOP_MESSAGE     DC.B 'NOP',0
00000224= 4D 4F 56 45 4D 2E 00     298  MOVEM_MESSAGE   DC.B 'MOVEM.',0
0000022B= 4A 53 52 00              299  JSR_MESSAGE     DC.B 'JSR',0
0000022F= 52 54 53 00              300  RTS_MESSAGE     DC.B 'RTS',0
00000233= 43 4C 52 00              301  CLR_MESSAGE     DC.B 'CLR',0
00000237= 41 44 44 51 2E 00        302  ADDQ_MESSAGE    DC.B 'ADDQ.',0
0000023D= 42 45 51 00              303  BEQ_MESSAGE     DC.B 'BEQ',0   *//
00000241= 42 4E 45 00              304  BNE_MESSAGE     DC.B 'BNE',0   *//
00000245= 42 43 53 00              305  BCS_MESSAGE     DC.B 'BCS',0   *//
00000249= 42 47 45 00              306  BGE_MESSAGE     DC.B 'BGE',0   *//
0000024D= 42 47 54 00              307  BGT_MESSAGE     DC.B 'BGT',0   *//
00000251= 42 48 49 00              308  BHI_MESSAGE     DC.B 'BHI',0   *//
00000255= 42 4C 45 00              309  BLE_MESSAGE     DC.B 'BLE',0   *//
00000259= 42 4C 53 00              310  BLS_MESSAGE     DC.B 'BLS',0   *//
0000025D= 42 4C 54 00              311  BLT_MESSAGE     DC.B 'BLT',0   *//
00000261= 42 4D 49 00              312  BMI_MESSAGE     DC.B 'BMI',0   *//
00000265= 42 50 4C 00              313  BPL_MESSAGE     DC.B 'BPL',0   *//
00000269= 42 56 43 00              314  BVC_MESSAGE     DC.B 'BVC',0   *//
0000026D= 42 56 53 00              315  BVS_MESSAGE     DC.B 'BVS',0   *//
00000271                           316  
00000271= 4D 4F 56 45 51 2E 00     317  MOVEQ_MESSAGE   DC.B 'MOVEQ.',0
00000278= 44 49 56 55 2E 00        318  DIVU_MESSAGE    DC.B 'DIVU.',0
0000027E= 4F 52 2E 00              319  OR_MESSAGE      DC.B 'OR.',0
00000282= 53 55 42 2E 00           320  SUB_MESSAGE     DC.B 'SUB.',0
00000287= 43 4D 50 2E 00           321  CMP_MESSAGE     DC.B 'CMP.',0
0000028C= 4D 55 4C 53 2E 00        322  MULS_MESSAGE    DC.B 'MULS.',0
00000292= 41 4E 44 2E 00           323  AND_MESSAGE     DC.B 'AND.',0
00000297= 41 44 44 2E 00           324  ADD_MESSAGE     DC.B 'ADD.',0
0000029C= 41 44 44 41 2E 00        325  ADDA_MESSAGE    DC.B 'ADDA.',0
000002A2= 4C 53 4C 2E 00           326  LSL_MESSAGE     DC.B 'LSL.',0 *//
000002A7= 41 53 4C 2E 00           327  ASL_MESSAGE     DC.B 'ASL.',0
000002AC= 52 4F 4C 2E 00           328  ROL_MESSAGE     DC.B 'ROL.',0
000002B1= 4C 53 52 2E 00           329  LSR_MESSAGE     DC.B 'LSR.',0 *//
000002B6= 41 53 52 2E 00           330  ASR_MESSAGE     DC.B 'ASR.',0
000002BB= 52 4F 52 2E 00           331  ROR_MESSAGE     DC.B 'ROR.',0
000002C0= 42 20 20 20 20 00        332  SIZE_B_PRINT    DC.B 'B    ',0
000002C6= 57 20 20 20 20 00        333  SIZE_W_PRINT    DC.B 'W    ',0
000002CC= 4C 20 20 20 20 00        334  SIZE_L_PRINT    DC.B 'L    ',0
000002D2= 23 00                    335  POUND_SIGN      DC.B '#',0
000002D4= 24 00                    336  HEX_SIGN        DC.B '$',0
000002D6                           337  
000002D6= 44 00                    338  D_REGISTER      DC.B 'D',0
000002D8= 41 00                    339  A_REGISTER      DC.B 'A',0
000002DA= 28 41 00                 340  IA_START        DC.B '(A',0
000002DD= 29 00                    341  IA_END          DC.B ')',0
000002DF= 28 41 00                 342  A_PI_START      DC.B '(A',0
000002E2= 29 2B 00                 343  A_PI_END        DC.B ')+',0
000002E5= 2D 28 41 00              344  A_PD_START      DC.B '-(A',0
000002E9= 29 00                    345  A_PD_END        DC.B ')',0
000002EB= 2C 20 00                 346  COMMA           DC.B ', ',0
000002EE                           347  
000002EE                           348  
000002EE                           349  
000002EE                           350  
000002EE                           351  
000002EE                           352  
000002EE                           353  
000002EE                           354  -------------------- end include --------------------
000002EE                           355       
000002EE                           356  
000002EE                           357   
000002EE                           358  
000002EE                           359  
000002EE                           360  
000002EE                           361  
000002EE                           362  
Line 363 WARNING: END directive missing, starting address not set

No errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSOLUTE_LONG       17E
ABSOLUTE_SHORT      160
ADDA_MESSAGE        29C
ADDI_MESSAGE        20D
ADDQ_MESSAGE        237
ADDRESS_PD          F6
ADDRESS_PI          CC
ADDRESS_REGISTER    86
ADDRESS_W_DISPLACEMENT  120
ADDRESS_W_INDEX     120
ADD_MESSAGE         297
AND_MESSAGE         292
ASL_MESSAGE         2A7
ASR_MESSAGE         2B6
A_PD_END            2E9
A_PD_START          2E5
A_PI_END            2E2
A_PI_START          2DF
A_REGISTER          2D8
BCS_MESSAGE         245
BEQ_MESSAGE         23D
BGE_MESSAGE         249
BGT_MESSAGE         24D
BHI_MESSAGE         251
BLE_MESSAGE         255
BLS_MESSAGE         259
BLT_MESSAGE         25D
BMI_MESSAGE         261
BNE_MESSAGE         241
BPL_MESSAGE         265
BVC_MESSAGE         269
BVS_MESSAGE         26D
CLR_MESSAGE         233
CMP_MESSAGE         287
CODE000             44
CODE001             48
CODE010             4C
CODE011             50
CODE100             54
CODE101             58
CODE110             5C
CODE111             60
COMMA               2EB
CR                  D
DATA_REGISTER       66
DIVU_MESSAGE        278
DONE                1A0
D_REGISTER          2D6
ENDING              1F1
GROUP_111           120
HEX_SIGN            2D4
IA_END              2DD
IA_START            2DA
IMMEDIATE           19C
INDIRECT_ADDRESS    A2
JMP_TABLE_EA        E
JMP_TABLE_EA_111    12E
JSR_MESSAGE         22B
LF                  A
LSL_MESSAGE         2A2
LSR_MESSAGE         2B1
MOVEA_MESSAGE       213
MOVEM_MESSAGE       224
MOVEQ_MESSAGE       271
MOVE_MESSAGE        21A
MULS_MESSAGE        28C
NOP_MESSAGE         220
OR_MESSAGE          27E
PC_W_DISPLACEMENT   160
PC_W_INDEX          160
POUND_SIGN          2D2
PRINT_EA            0
REG000              154
REG001              158
REG010              14C
REG011              150
REG100              15C
RETURN              64
ROL_MESSAGE         2AC
ROR_MESSAGE         2BB
RTS_MESSAGE         22F
SIZE_B_PRINT        2C0
SIZE_L_PRINT        2CC
SIZE_W_PRINT        2C6
STARTING            1D3
SUB_MESSAGE         282
WELCOME_MESSAGE     1A2
