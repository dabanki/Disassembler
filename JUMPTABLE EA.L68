00000400 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 5/20/2016 7:23:13 PM

00000400                             1   ORG     $400
00000400                             2  
00000400                             3  * D6 is mode, D7 is register 
00000400                             4  * Dn, An, (An), (An)+, -(An)
00000400                             5  * Jumps based on mode
00000400                             6  * USING A5 AS THE ADDRESS REGISTER HOLDING CURRENT ADDRESS OF PROGRESS
00000400                             7  
00000400                             8  * Consider the next instruction. Why do we have to multiply the index 
00000400                             9  
00000400                            10  * by 6? How many bytes does a single jump table entry require? 
00000400                            11  
00000400                            12  
00000400                            13  *start 
00000400  1A3C 0000                 14                 MOVE.B       #%00, D5
00000404                            15                
00000404  1C3C 0007                 16                 MOVE.B       #%111,D6         *MODE
00000408                            17                 
00000408  1E3C 0004                 18                 MOVE.B       #%100,D7         *REGISTER
0000040C                            19                 
0000040C  2A7C 00004000             20                 MOVE.L       #$4000, A5
00000412                            21  
00000412  1ABC 0040                 22                 MOVE.B       #$0040, (A5)   
00000416                            23                 
00000416  41F9 00000424             24                 LEA     jmp_table_ea,A0      *Index into the table
0000041C                            25  
0000041C  CCFC 0006                 26                 MULU        #6,D6            *Form offset     
00000420                            27  
00000420  4EF0 6000                 28                 JMP         0(A0,D6)         *Jump indirect with index
00000424                            29   
00000424                            30  
00000424  4EF9 00000454             31  jmp_table_ea   JMP         code000
0000042A                            32  
0000042A  4EF9 00000458             33                 JMP         code001
00000430                            34  
00000430  4EF9 0000045C             35                 JMP         code010
00000436                            36  
00000436  4EF9 00000460             37                 JMP         code011
0000043C                            38  
0000043C  4EF9 00000464             39                 JMP         code100
00000442                            40  
00000442  4EF9 00000468             41                 JMP         code101
00000448                            42  
00000448  4EF9 0000046C             43                 JMP         code110
0000044E                            44  
0000044E  4EF9 00000470             45                 JMP         code111
00000454                            46          
00000454                            47  
00000454                            48   
00000454                            49  
00000454                            50  *The following subroutines will get filled in as you decode the instructions . For *now, just exit gracefully.
00000454                            51  
00000454                            52   
00000454                            53  
00000454                            54   
00000454                            55  
00000454  6000 001E                 56  code000       BRA         DATA_REGISTER
00000458                            57  
00000458  6000 0036                 58  code001       BRA         ADDRESS_REGISTER
0000045C                            59  
0000045C  6000 004E                 60  code010       BRA         INDIRECT_ADDRESS
00000460                            61  
00000460  6000 0074                 62  code011       BRA         ADDRESS_PI    * post increment
00000464                            63  
00000464  6000 009A                 64  code100       BRA         ADDRESS_PD    * pre decrement
00000468                            65  
00000468  6000 00C0                 66  code101       BRA         ADDRESS_W_DISPLACEMENT
0000046C                            67  
0000046C  6000 00C0                 68  code110       BRA         ADDRESS_W_INDEX
00000470                            69  
00000470  6000 00C0                 70  code111       BRA         GROUP_111
00000474                            71  
00000474                            72   
00000474                            73  DATA_REGISTER
00000474                            74  
00000474  43F9 0000073E             75              LEA D_REGISTER, A1
0000047A                            76              
0000047A  4280                      77              CLR.L D0
0000047C                            78              
0000047C  103C 000E                 79              MOVE.B #14, D0
00000480                            80              
00000480  4E4F                      81              TRAP #15                * print out 'D' for data register
00000482                            82              
00000482  4281                      83              CLR.L D1
00000484                            84              
00000484  1207                      85              MOVE.B D7, D1
00000486                            86              
00000486  103C 0003                 87              MOVE.B #3, D0           * print out the number in the register
0000048A                            88              
0000048A  4E4F                      89              TRAP #15
0000048C                            90              
0000048C  6000 017A                 91              BRA DONE
00000490                            92              
00000490                            93  
00000490                            94  ADDRESS_REGISTER
00000490  43F9 00000740             95              LEA A_REGISTER, A1
00000496                            96              
00000496  4280                      97              CLR.L D0
00000498                            98              
00000498  103C 000E                 99              MOVE.B #14, D0          * print out the 'A' for address register
0000049C                           100              
0000049C  4E4F                     101              TRAP #15
0000049E                           102              
0000049E  4281                     103              CLR.L D1
000004A0                           104              
000004A0  1207                     105              MOVE.B D7, D1
000004A2                           106              
000004A2  103C 0003                107              MOVE.B #3, D0
000004A6                           108              
000004A6  4E4F                     109              TRAP #15                * print out the value in the data register
000004A8                           110  
000004A8  6000 015E                111              BRA DONE
000004AC                           112              
000004AC                           113  INDIRECT_ADDRESS
000004AC  43F9 00000742            114              LEA IA_START, A1
000004B2                           115              
000004B2  4280                     116              CLR.L D0
000004B4                           117              
000004B4  103C 000E                118              MOVE.B #14, D0          * print out the '(A' for start of indirect address register
000004B8                           119              
000004B8  4E4F                     120              TRAP #15
000004BA                           121              
000004BA  4281                     122              CLR.L D1
000004BC                           123              
000004BC  1207                     124              MOVE.B D7, D1
000004BE                           125              
000004BE  103C 0003                126              MOVE.B #3, D0
000004C2                           127              
000004C2  4E4F                     128              TRAP #15                * print out the value in the data register
000004C4                           129              
000004C4  43F9 00000745            130              LEA IA_END, A1
000004CA                           131  
000004CA  4280                     132              CLR.L D0
000004CC                           133              
000004CC  103C 000E                134              MOVE.B #14, D0          * print out the ')' for end of post increment address register
000004D0                           135              
000004D0  4E4F                     136              TRAP #15
000004D2                           137              
000004D2  6000 0134                138              BRA DONE
000004D6                           139  
000004D6                           140  ADDRESS_PI
000004D6  43F9 00000747            141              LEA A_PI_START, A1
000004DC                           142              
000004DC  4280                     143              CLR.L D0
000004DE                           144              
000004DE  103C 000E                145              MOVE.B #14, D0          * print out the '(A' for start of post increment address register
000004E2                           146              
000004E2  4E4F                     147              TRAP #15
000004E4                           148              
000004E4  4281                     149              CLR.L D1
000004E6                           150              
000004E6  1207                     151              MOVE.B D7, D1
000004E8                           152              
000004E8  103C 0003                153              MOVE.B #3, D0
000004EC                           154              
000004EC  4E4F                     155              TRAP #15                * print out the value in the data register
000004EE                           156              
000004EE  43F9 0000074A            157              LEA A_PI_END, A1
000004F4                           158  
000004F4  4280                     159              CLR.L D0
000004F6                           160              
000004F6  103C 000E                161              MOVE.B #14, D0          * print out the ')+' for end of post increment address register
000004FA                           162     
000004FA  4E4F                     163              TRAP #15
000004FC                           164              
000004FC  6000 010A                165              BRA DONE  
00000500                           166         
00000500                           167  ADDRESS_PD
00000500                           168  
00000500  43F9 0000074D            169              LEA A_PD_START, A1
00000506                           170              
00000506  4280                     171              CLR.L D0
00000508                           172              
00000508  103C 000E                173              MOVE.B #14, D0          * print out the '-(A' for start of pre decrement address register
0000050C                           174              
0000050C  4E4F                     175              TRAP #15
0000050E                           176              
0000050E  4281                     177              CLR.L D1
00000510                           178              
00000510  1207                     179              MOVE.B D7, D1
00000512                           180              
00000512  103C 0003                181              MOVE.B #3, D0
00000516                           182              
00000516  4E4F                     183              TRAP #15                * print out the value in the data register
00000518                           184              
00000518  43F9 00000751            185              LEA A_PD_END, A1
0000051E                           186  
0000051E  4280                     187              CLR.L D0
00000520                           188              
00000520  103C 000E                189              MOVE.B #14, D0          * print out the ')-' for end of pre decrement
00000524                           190  
00000524  4E4F                     191              TRAP #15
00000526                           192              
00000526  6000 00E0                193              BRA DONE
0000052A                           194              
0000052A                           195  ADDRESS_W_DISPLACEMENT
0000052A  6000 00DC                196              BRA DONE
0000052E                           197  
0000052E                           198  ADDRESS_W_INDEX
0000052E  6000 00D8                199              BRA DONE
00000532                           200  
00000532                           201  GROUP_111
00000532                           202  
00000532  41F9 00000540            203                 LEA         jmp_table_ea_111,A0    *Index into the table
00000538                           204  
00000538  CEFC 0006                205                 MULU        #6,D7       *Form offset     
0000053C                           206  
0000053C  4EF0 7000                207                 JMP         0(A0,D7)   *Jump indirect with index
00000540                           208                 
00000540                           209  jmp_table_ea_111   
00000540  4EF9 00000566            210                 JMP         reg000
00000546                           211  
00000546  4EF9 0000056A            212                 JMP         reg001
0000054C                           213  
0000054C  4EF9 0000055E            214                 JMP         reg010
00000552                           215  
00000552  4EF9 00000562            216                 JMP         reg011
00000558                           217  
00000558  4EF9 0000056E            218                 JMP         reg100
0000055E                           219          
0000055E                           220  
0000055E  6000 0012                221  reg010       BRA         PC_W_DISPLACEMENT
00000562                           222  
00000562  6000 0012                223  reg011       BRA         PC_W_INDEX
00000566                           224  
00000566  6000 0012                225  reg000       BRA         ABSOLUTE_SHORT
0000056A                           226  
0000056A  6000 002C                227  reg001       BRA         ABSOLUTE_LONG
0000056E                           228  
0000056E  6000 0046                229  reg100       BRA         IMMEDIATE
00000572                           230  
00000572                           231  
00000572                           232  PC_W_DISPLACEMENT
00000572  6000 0094                233              BRA DONE
00000576                           234  
00000576                           235  PC_W_INDEX
00000576  6000 0090                236              BRA DONE
0000057A                           237  
0000057A                           238  ABSOLUTE_SHORT
0000057A  43F9 0000073C            239              LEA         HEX_SIGN, A1
00000580                           240              
00000580  103C 000E                241              MOVE.B      #14, D0
00000584                           242              
00000584  4E4F                     243              TRAP #15
00000586                           244              
00000586  4281                     245              CLR.L       D1
00000588                           246              
00000588  221D                     247              MOVE.L      (A5)+, D1
0000058A                           248              
0000058A  103C 000F                249              MOVE.B      #15, D0
0000058E                           250              
0000058E  143C 0010                251              MOVE.B      #16, D2
00000592                           252              
00000592  4E4F                     253              TRAP #15
00000594                           254              
00000594  6000 0072                255              BRA DONE  
00000598                           256  
00000598                           257  
00000598                           258  ABSOLUTE_LONG
00000598  43F9 0000073C            259              LEA         HEX_SIGN, A1
0000059E                           260              
0000059E  103C 000E                261              MOVE.B      #14, D0
000005A2                           262              
000005A2  4E4F                     263              TRAP #15
000005A4                           264              
000005A4  4281                     265              CLR.L       D1
000005A6                           266              
000005A6  221D                     267              MOVE.L      (A5)+, D1
000005A8                           268              
000005A8  103C 000F                269              MOVE.B      #15, D0
000005AC                           270              
000005AC  143C 0010                271              MOVE.B      #16, D2
000005B0                           272              
000005B0  4E4F                     273              TRAP #15
000005B2                           274                          
000005B2  6000 0054                275              BRA DONE  
000005B6                           276  
000005B6                           277  
000005B6                           278  IMMEDIATE
000005B6  43F9 0000073A            279              LEA     POUND_SIGN, A1
000005BC                           280              
000005BC  103C 000E                281              MOVE.B  #14, D0
000005C0                           282              
000005C0  4E4F                     283              TRAP #15
000005C2                           284              
000005C2  43F9 0000073C            285              LEA     HEX_SIGN, A1
000005C8                           286              
000005C8  4E4F                     287              TRAP #15
000005CA                           288              
000005CA  BA3C 0000                289              CMP.B   #%00, D5
000005CE                           290              
000005CE  6700 000E                291              BEQ     IMMEDIATE_B
000005D2                           292              
000005D2  BA3C 0001                293              CMP.B   #%01, D5
000005D6                           294              
000005D6  6700 0014                295              BEQ     IMMEDIATE_W
000005DA                           296              
000005DA  6000 001E                297              BRA     IMMEDIATE_L
000005DE                           298              
000005DE                           299  IMMEDIATE_B
000005DE  4285                     300              CLR.L       D5
000005E0                           301     
000005E0  1A1D                     302              MOVE.B      (A5)+, D5
000005E2                           303              
000005E2  4EB9 00000756            304              JSR         HEX_TO_ASCII
000005E8                           305              
000005E8  6000 001E                306              BRA DONE
000005EC                           307  
000005EC                           308  IMMEDIATE_W
000005EC  4285                     309              CLR.L       D5
000005EE                           310  
000005EE  3A1D                     311              MOVE.W      (A5)+, D5
000005F0                           312              
000005F0  4EB9 00000756            313              JSR         HEX_TO_ASCII
000005F6                           314              
000005F6                           315              *MOVE.B      #15, D0
000005F6                           316              
000005F6                           317              *MOVE.B      #16, D2
000005F6                           318              
000005F6                           319              *TRAP #15 
000005F6                           320              
000005F6  6000 0010                321              BRA DONE        
000005FA                           322  
000005FA                           323  IMMEDIATE_L 
000005FA  4285                     324              CLR.L       D5
000005FC                           325      
000005FC  4EB9 00000756            326              JSR         HEX_TO_ASCII
00000602                           327              
00000602  4E4F                     328              TRAP #15
00000604                           329              
00000604  6000 0002                330              BRA DONE
00000608                           331  
00000608                           332  DONE
00000608  4E75                     333      RTS
0000060A                           334      
0000060A                           335    INCLUDE 'MESSAGE_Data.X68'
0000060A                           336  
0000060A  =0000000D                337  CR  EQU $0D
0000060A  =0000000A                338  LF  EQU $0A 
0000060A                           339  
0000060A= 57 65 6C 63 6F 6D ...    340  WELCOME_MESSAGE DC.B 'Welcome to our Team wild pokemon disassembly!!', CR, LF, 0
0000063B= 45 6E 74 65 72 20 ...    341  STARTING        DC.B 'Enter the starting location: ', 0
00000659= 45 6E 74 65 72 20 ...    342  ENDING          DC.B 'Enter the ending locaiton: ', 0
00000675                           343      
00000675= 41 44 44 49 2E 00        344  ADDI_MESSAGE    DC.B 'ADDI.',0
0000067B= 4D 4F 56 45 41 2E 00     345  MOVEA_MESSAGE   DC.B 'MOVEA.',0
00000682= 4D 4F 56 45 2E 00        346  MOVE_MESSAGE    DC.B 'MOVE.',0
00000688= 4E 4F 50 00              347  NOP_MESSAGE     DC.B 'NOP',0
0000068C= 4D 4F 56 45 4D 2E 00     348  MOVEM_MESSAGE   DC.B 'MOVEM.',0
00000693= 4A 53 52 00              349  JSR_MESSAGE     DC.B 'JSR',0
00000697= 52 54 53 00              350  RTS_MESSAGE     DC.B 'RTS',0
0000069B= 43 4C 52 00              351  CLR_MESSAGE     DC.B 'CLR',0
0000069F= 41 44 44 51 2E 00        352  ADDQ_MESSAGE    DC.B 'ADDQ.',0
000006A5= 42 45 51 00              353  BEQ_MESSAGE     DC.B 'BEQ',0   *//
000006A9= 42 4E 45 00              354  BNE_MESSAGE     DC.B 'BNE',0   *//
000006AD= 42 43 53 00              355  BCS_MESSAGE     DC.B 'BCS',0   *//
000006B1= 42 47 45 00              356  BGE_MESSAGE     DC.B 'BGE',0   *//
000006B5= 42 47 54 00              357  BGT_MESSAGE     DC.B 'BGT',0   *//
000006B9= 42 48 49 00              358  BHI_MESSAGE     DC.B 'BHI',0   *//
000006BD= 42 4C 45 00              359  BLE_MESSAGE     DC.B 'BLE',0   *//
000006C1= 42 4C 53 00              360  BLS_MESSAGE     DC.B 'BLS',0   *//
000006C5= 42 4C 54 00              361  BLT_MESSAGE     DC.B 'BLT',0   *//
000006C9= 42 4D 49 00              362  BMI_MESSAGE     DC.B 'BMI',0   *//
000006CD= 42 50 4C 00              363  BPL_MESSAGE     DC.B 'BPL',0   *//
000006D1= 42 56 43 00              364  BVC_MESSAGE     DC.B 'BVC',0   *//
000006D5= 42 56 53 00              365  BVS_MESSAGE     DC.B 'BVS',0   *//
000006D9                           366  
000006D9= 4D 4F 56 45 51 2E 00     367  MOVEQ_MESSAGE   DC.B 'MOVEQ.',0
000006E0= 44 49 56 55 2E 00        368  DIVU_MESSAGE    DC.B 'DIVU.',0
000006E6= 4F 52 2E 00              369  OR_MESSAGE      DC.B 'OR.',0
000006EA= 53 55 42 2E 00           370  SUB_MESSAGE     DC.B 'SUB.',0
000006EF= 43 4D 50 2E 00           371  CMP_MESSAGE     DC.B 'CMP.',0
000006F4= 4D 55 4C 53 2E 00        372  MULS_MESSAGE    DC.B 'MULS.',0
000006FA= 41 4E 44 2E 00           373  AND_MESSAGE     DC.B 'AND.',0
000006FF= 41 44 44 2E 00           374  ADD_MESSAGE     DC.B 'ADD.',0
00000704= 41 44 44 41 2E 00        375  ADDA_MESSAGE    DC.B 'ADDA.',0
0000070A= 4C 53 4C 2E 00           376  LSL_MESSAGE     DC.B 'LSL.',0 *//
0000070F= 41 53 4C 2E 00           377  ASL_MESSAGE     DC.B 'ASL.',0
00000714= 52 4F 4C 2E 00           378  ROL_MESSAGE     DC.B 'ROL.',0
00000719= 4C 53 52 2E 00           379  LSR_MESSAGE     DC.B 'LSR.',0 *//
0000071E= 41 53 52 2E 00           380  ASR_MESSAGE     DC.B 'ASR.',0
00000723= 52 4F 52 2E 00           381  ROR_MESSAGE     DC.B 'ROR.',0
00000728= 42 20 20 20 20 00        382  SIZE_B_PRINT    DC.B 'B    ',0
0000072E= 57 20 20 20 20 00        383  SIZE_W_PRINT    DC.B 'W    ',0
00000734= 4C 20 20 20 20 00        384  SIZE_L_PRINT    DC.B 'L    ',0
0000073A= 23 00                    385  POUND_SIGN      DC.B '#',0
0000073C= 24 00                    386  HEX_SIGN        DC.B '$',0
0000073E                           387  
0000073E= 44 00                    388  D_REGISTER      DC.B 'D',0
00000740= 41 00                    389  A_REGISTER      DC.B 'A',0
00000742= 28 41 00                 390  IA_START        DC.B '(A',0
00000745= 29 00                    391  IA_END          DC.B ')',0
00000747= 28 41 00                 392  A_PI_START      DC.B '(A',0
0000074A= 29 2B 00                 393  A_PI_END        DC.B ')+',0
0000074D= 2D 28 41 00              394  A_PD_START      DC.B '-(A',0
00000751= 29 00                    395  A_PD_END        DC.B ')',0
00000753= 2C 20 00                 396  COMMA           DC.B ', ',0
00000756                           397  
00000756                           398  
00000756                           399  
00000756                           400  
00000756                           401  
00000756                           402  
00000756                           403  
00000756                           404  -------------------- end include --------------------
00000756                           405    INCLUDE 'HEX_TO_ASCII_V1.X68'
00000756                           406      *ORG    $5000
00000756                           407  
00000756                           408  
00000756                           409  HEX_TO_ASCII      
00000756  4283                     410       CLR.L      D3
00000758                           411      
00000758                           412       *MOVE.L     #$ABCDEF, D5
00000758                           413       
00000758                           414  LOOP     
00000758  2C05                     415       MOVE.L     D5, D6                  * put the data in a register so we can manipulate it
0000075A                           416       
0000075A  4282                     417       CLR.L      D2
0000075C                           418       
0000075C  143C 001C                419       MOVE.B     #28, D2
00000760                           420  
00000760  E4AE                     421       LSR.L      D2, D6                  * shift out everything to the right of the last nibble, we print backwards so it shows up the correct order in the console
00000762                           422       
00000762  BC3C 000A                423       CMP.B      #10, D6
00000766                           424       
00000766  6C00 0006                425       BGE        LETTER                  * determine if a letter or a number
0000076A                           426       
0000076A  6000 000C                427       BRA        NUMBER
0000076E                           428       
0000076E                           429  LETTER
0000076E  0606 0037                430       ADD.B      #55, D6
00000772                           431       
00000772  1206                     432       MOVE.B     D6, D1                  * add the amount to change to ascii and move to D1 to prepare for printing
00000774                           433       
00000774  6000 000C                434       BRA        PRINTOUT_NIBBLE
00000778                           435  
00000778                           436  NUMBER     
00000778  0606 0030                437       ADD.B      #48, D6
0000077C                           438       
0000077C  1206                     439       MOVE.B     D6, D1                  * add the amount to change to ascii and move to D1 to prepare for printing
0000077E                           440       
0000077E  6000 0002                441       BRA        PRINTOUT_NIBBLE
00000782                           442  
00000782                           443  
00000782                           444  PRINTOUT_NIBBLE
00000782  E98D                     445      LSL.L      #4, D5                   * shift out the nibble you just read from the source
00000784                           446      
00000784  BC3C 0030                447      CMP.B      #$30, D6
00000788                           448  
00000788  67CE                     449      BEQ        LOOP             
0000078A                           450      
0000078A  103C 0006                451      MOVE.B     #6, D0                      * use TRAP task #6 to print a single character from D1  
0000078E                           452      
0000078E  4E4F                     453      TRAP #15
00000790                           454      
00000790  5203                     455      ADD.B      #1, D3                   * add to the counter in D3
00000792                           456       
00000792  B63C 0008                457      CMP.B      #8, D3                   * compare to the counter to check if you are done
00000796                           458       
00000796  6700 FE70                459      BEQ        DONE
0000079A                           460          
0000079A  60BC                     461      BRA LOOP                            * continue the loop and print next nibble
0000079C                           462       
0000079C                           463            
0000079C                           464  
0000079C                           465  
0000079C                           466      *SIMHALT             ; halt simulator
0000079C                           467  
0000079C                           468  
0000079C                           469      *END    START       ; last line of source
0000079C                           470  
0000079C                           471  
0000079C                           472  
0000079C                           473  -------------------- end include --------------------
0000079C                           474       
0000079C                           475          
0000079C                           476      
0000079C                           477                 END   $400 

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSOLUTE_LONG       598
ABSOLUTE_SHORT      57A
ADDA_MESSAGE        704
ADDI_MESSAGE        675
ADDQ_MESSAGE        69F
ADDRESS_PD          500
ADDRESS_PI          4D6
ADDRESS_REGISTER    490
ADDRESS_W_DISPLACEMENT  52A
ADDRESS_W_INDEX     52E
ADD_MESSAGE         6FF
AND_MESSAGE         6FA
ASL_MESSAGE         70F
ASR_MESSAGE         71E
A_PD_END            751
A_PD_START          74D
A_PI_END            74A
A_PI_START          747
A_REGISTER          740
BCS_MESSAGE         6AD
BEQ_MESSAGE         6A5
BGE_MESSAGE         6B1
BGT_MESSAGE         6B5
BHI_MESSAGE         6B9
BLE_MESSAGE         6BD
BLS_MESSAGE         6C1
BLT_MESSAGE         6C5
BMI_MESSAGE         6C9
BNE_MESSAGE         6A9
BPL_MESSAGE         6CD
BVC_MESSAGE         6D1
BVS_MESSAGE         6D5
CLR_MESSAGE         69B
CMP_MESSAGE         6EF
CODE000             454
CODE001             458
CODE010             45C
CODE011             460
CODE100             464
CODE101             468
CODE110             46C
CODE111             470
COMMA               753
CR                  D
DATA_REGISTER       474
DIVU_MESSAGE        6E0
DONE                608
D_REGISTER          73E
ENDING              659
GROUP_111           532
HEX_SIGN            73C
HEX_TO_ASCII        756
IA_END              745
IA_START            742
IMMEDIATE           5B6
IMMEDIATE_B         5DE
IMMEDIATE_L         5FA
IMMEDIATE_W         5EC
INDIRECT_ADDRESS    4AC
JMP_TABLE_EA        424
JMP_TABLE_EA_111    540
JSR_MESSAGE         693
LETTER              76E
LF                  A
LOOP                758
LSL_MESSAGE         70A
LSR_MESSAGE         719
MOVEA_MESSAGE       67B
MOVEM_MESSAGE       68C
MOVEQ_MESSAGE       6D9
MOVE_MESSAGE        682
MULS_MESSAGE        6F4
NOP_MESSAGE         688
NUMBER              778
OR_MESSAGE          6E6
PC_W_DISPLACEMENT   572
PC_W_INDEX          576
POUND_SIGN          73A
PRINTOUT_NIBBLE     782
REG000              566
REG001              56A
REG010              55E
REG011              562
REG100              56E
ROL_MESSAGE         714
ROR_MESSAGE         723
RTS_MESSAGE         697
SIZE_B_PRINT        728
SIZE_L_PRINT        734
SIZE_W_PRINT        72E
STARTING            63B
SUB_MESSAGE         6EA
WELCOME_MESSAGE     60A
