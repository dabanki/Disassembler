00000400 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 5/18/16 6:19:12 PM

00000400                             1   ORG     $400
00000400                             2  
00000400                             3  * D6 is mode, D7 is register 
00000400                             4  * Dn, An, (An), (An)+, -(An)
00000400                             5  * Jumps based on mode
00000400                             6  
00000400                             7  * Consider the next instruction. Why do we have to multiply the index 
00000400                             8  
00000400                             9  * by 6? How many bytes does a single jump table entry require? 
00000400  =00000606                 10  example          EQU     %0000011000000110
00000400  3A7C 7000                 11                   MOVEA.W    #$7000, A5
00000404  2ABC 10342035             12                   MOVE.L    #$10342035, (A5)
0000040A                            13  
0000040A                            14  start 
0000040A  1C3C 0002                 15                 MOVE.B      #%010,D6         *MODE
0000040E                            16                 
0000040E  1E3C 0007                 17                 MOVE.B      #%111,D7         *REGISTER
00000412                            18                 
00000412  41F9 00000420             19                 LEA     jmp_table_ea,A0      *Index into the table
00000418                            20  
00000418  CCFC 0006                 21                 MULU        #6,D6            *Form offset     
0000041C                            22  
0000041C  4EB0 6000                 23                 JSR         0(A0,D6)         *Jump indirect with index
00000420                            24  
00000420                            25                      
00000420                            26  
00000420  4EF9 00000450             27  jmp_table_ea   JMP         code000
00000426                            28  
00000426  4EF9 00000454             29                 JMP         code001
0000042C                            30  
0000042C  4EF9 00000458             31                 JMP         code010
00000432                            32  
00000432  4EF9 0000045C             33                 JMP         code011
00000438                            34  
00000438  4EF9 00000460             35                 JMP         code100
0000043E                            36  
0000043E  4EF9 00000464             37                 JMP         code101
00000444                            38  
00000444  4EF9 00000468             39                 JMP         code110
0000044A                            40  
0000044A  4EF9 0000046C             41                 JMP         code111
00000450                            42          
00000450                            43  
00000450                            44   
00000450                            45  
00000450                            46  *The following subroutines will get filled in as you decode the instructions . For *now, just exit gracefully.
00000450                            47  
00000450                            48   
00000450                            49  
00000450                            50   
00000450                            51  
00000450  6000 001E                 52  code000       BRA         DATA_REGISTER
00000454                            53  
00000454  6000 0036                 54  code001       BRA         ADDRESS_REGISTER
00000458                            55  
00000458  6000 004E                 56  code010       BRA         INDIRECT_ADDRESS
0000045C                            57  
0000045C  6000 0074                 58  code011       BRA         ADDRESS_PI    * post increment
00000460                            59  
00000460  6000 009A                 60  code100       BRA         ADDRESS_PD    * pre decrement
00000464                            61  
00000464  6000 00C0                 62  code101       BRA         ADDRESS_W_DISPLACEMENT
00000468                            63  
00000468  6000 00BC                 64  code110       BRA         ADDRESS_W_INDEX
0000046C                            65  
0000046C  6000 00B8                 66  code111       BRA         GROUP_111
00000470                            67  
00000470                            68   
00000470                            69  DATA_REGISTER
00000470                            70  
00000470  43F9 000006CE             71              LEA D_REGISTER, A1
00000476                            72              
00000476  4280                      73              CLR.L D0
00000478                            74              
00000478  103C 000E                 75              MOVE.B #14, D0
0000047C                            76              
0000047C  4E4F                      77              TRAP #15                * print out 'D' for data register
0000047E                            78              
0000047E  4281                      79              CLR.L D1
00000480                            80              
00000480  1207                      81              MOVE.B D7, D1
00000482                            82              
00000482  103C 0003                 83              MOVE.B #3, D0           * print out the number in the register
00000486                            84              
00000486  4E4F                      85              TRAP #15
00000488                            86              
00000488  6000 0110                 87              BRA DONE
0000048C                            88              
0000048C                            89  
0000048C                            90  ADDRESS_REGISTER
0000048C  43F9 000006D0             91              LEA A_REGISTER, A1
00000492                            92              
00000492  4280                      93              CLR.L D0
00000494                            94              
00000494  103C 000E                 95              MOVE.B #14, D0          * print out the 'A' for address register
00000498                            96              
00000498  4E4F                      97              TRAP #15
0000049A                            98              
0000049A  4281                      99              CLR.L D1
0000049C                           100              
0000049C  1207                     101              MOVE.B D7, D1
0000049E                           102              
0000049E  103C 0003                103              MOVE.B #3, D0
000004A2                           104              
000004A2  4E4F                     105              TRAP #15                * print out the value in the data register
000004A4                           106  
000004A4  6000 00F4                107              BRA DONE
000004A8                           108              
000004A8                           109  INDIRECT_ADDRESS
000004A8  43F9 000006D2            110              LEA IA_START, A1
000004AE                           111              
000004AE  4280                     112              CLR.L D0
000004B0                           113              
000004B0  103C 000E                114              MOVE.B #14, D0          * print out the '(A' for start of indirect address register
000004B4                           115              
000004B4  4E4F                     116              TRAP #15
000004B6                           117              
000004B6  4281                     118              CLR.L D1
000004B8                           119              
000004B8  1207                     120              MOVE.B D7, D1
000004BA                           121              
000004BA  103C 0003                122              MOVE.B #3, D0
000004BE                           123              
000004BE  4E4F                     124              TRAP #15                * print out the value in the data register
000004C0                           125              
000004C0  43F9 000006D5            126              LEA IA_END, A1
000004C6                           127  
000004C6  4280                     128              CLR.L D0
000004C8                           129              
000004C8  103C 000E                130              MOVE.B #14, D0          * print out the ')' for end of post increment address register
000004CC                           131              
000004CC  4E4F                     132              TRAP #15
000004CE                           133              
000004CE  6000 00CA                134              BRA DONE
000004D2                           135  
000004D2                           136  ADDRESS_PI
000004D2  43F9 000006D7            137              LEA A_PI_START, A1
000004D8                           138              
000004D8  4280                     139              CLR.L D0
000004DA                           140              
000004DA  103C 000E                141              MOVE.B #14, D0          * print out the '(A' for start of post increment address register
000004DE                           142              
000004DE  4E4F                     143              TRAP #15
000004E0                           144              
000004E0  4281                     145              CLR.L D1
000004E2                           146              
000004E2  1207                     147              MOVE.B D7, D1
000004E4                           148              
000004E4  103C 0003                149              MOVE.B #3, D0
000004E8                           150              
000004E8  4E4F                     151              TRAP #15                * print out the value in the data register
000004EA                           152              
000004EA  43F9 000006DA            153              LEA A_PI_END, A1
000004F0                           154  
000004F0  4280                     155              CLR.L D0
000004F2                           156              
000004F2  103C 000E                157              MOVE.B #14, D0          * print out the ')+' for end of post increment address register
000004F6                           158     
000004F6  4E4F                     159              TRAP #15
000004F8                           160              
000004F8  6000 00A0                161              BRA DONE  
000004FC                           162         
000004FC                           163  ADDRESS_PD
000004FC                           164  
000004FC  43F9 000006DD            165              LEA A_PD_START, A1
00000502                           166              
00000502  4280                     167              CLR.L D0
00000504                           168              
00000504  103C 000E                169              MOVE.B #14, D0          * print out the '-(A' for start of pre decrement address register
00000508                           170              
00000508  4E4F                     171              TRAP #15
0000050A                           172              
0000050A  4281                     173              CLR.L D1
0000050C                           174              
0000050C  1207                     175              MOVE.B D7, D1
0000050E                           176              
0000050E  103C 0003                177              MOVE.B #3, D0
00000512                           178              
00000512  4E4F                     179              TRAP #15                * print out the value in the data register
00000514                           180              
00000514  43F9 000006E1            181              LEA A_PD_END, A1
0000051A                           182  
0000051A  4280                     183              CLR.L D0
0000051C                           184              
0000051C  103C 000E                185              MOVE.B #14, D0          * print out the ')-' for end of pre decrement
00000520                           186  
00000520  4E4F                     187              TRAP #15
00000522                           188              
00000522  6000 0076                189              BRA DONE
00000526                           190              
00000526                           191  ADDRESS_W_DISPLACEMENT
00000526                           192  
00000526                           193  ADDRESS_W_INDEX
00000526                           194  
00000526                           195  GROUP_111
00000526                           196  
00000526  41F9 00000534            197                 LEA     jmp_table_ea_111,A0    *Index into the table
0000052C                           198  
0000052C  CEFC 0006                199                 MULU        #6,D7       *Form offset     
00000530                           200  
00000530  4EB0 7000                201                 JSR          0(A0,D7)   *Jump indirect with index
00000534                           202                 
00000534                           203  jmp_table_ea_111   
00000534  4EF9 0000055A            204                 JMP         reg000
0000053A                           205  
0000053A  4EF9 0000055E            206                 JMP         reg001
00000540                           207  
00000540  4EF9 00000552            208                 JMP         reg010
00000546                           209  
00000546  4EF9 00000556            210                 JMP         reg011
0000054C                           211  
0000054C  4EF9 00000562            212                 JMP         reg100
00000552                           213          
00000552                           214  
00000552  6000 0012                215  reg010       BRA         PC_W_DISPLACEMENT
00000556                           216  
00000556  6000 000E                217  reg011       BRA         PC_W_INDEX
0000055A                           218  
0000055A  6000 000A                219  reg000       BRA         ABSOLUTE_SHORT
0000055E                           220  
0000055E  6000 0020                221  reg001       BRA         ABSOLUTE_LONG
00000562                           222  
00000562  6000 0036                223  reg100       BRA         IMMEDIATE
00000566                           224  
00000566                           225  
00000566                           226  PC_W_DISPLACEMENT
00000566                           227  
00000566                           228  PC_W_INDEX
00000566                           229  
00000566                           230  ABSOLUTE_SHORT
00000566  43F9 000006CC            231              LEA         HEX_SIGN, A1
0000056C                           232              
0000056C  103C 000E                233              MOVE.B      #14, D0
00000570                           234              
00000570  4E4F                     235              TRAP #15
00000572                           236              
00000572  4281                     237              CLR.L       D1
00000574                           238              
00000574  321D                     239              MOVE.W      (A5)+, D1
00000576                           240              
00000576  103C 000F                241              MOVE.B      #15, D0
0000057A                           242              
0000057A  143C 0010                243              MOVE.B      #16, D2
0000057E                           244              
0000057E  4E4F                     245              TRAP #15
00000580                           246              
00000580                           247  
00000580                           248  ABSOLUTE_LONG
00000580  43F9 000006CC            249              LEA         HEX_SIGN, A1
00000586                           250              
00000586  103C 000E                251              MOVE.B      #14, D0
0000058A                           252              
0000058A  4E4F                     253              TRAP #15
0000058C                           254              
0000058C  4281                     255              CLR.L       D1
0000058E                           256              
0000058E  221D                     257              MOVE.L      (A5)+, D1
00000590                           258              
00000590  103C 000F                259              MOVE.B      #15, D0
00000594                           260              
00000594  143C 0010                261              MOVE.B      #16, D2
00000598                           262              
00000598  4E4F                     263              TRAP #15
0000059A                           264  
0000059A                           265  
0000059A                           266  IMMEDIATE
0000059A                           267  
0000059A                           268  DONE
0000059A                           269    INCLUDE 'MESSAGE_Data.X68'
0000059A                           270  
0000059A  =0000000D                271  CR  EQU $0D
0000059A  =0000000A                272  LF  EQU $0A 
0000059A                           273  
0000059A= 57 65 6C 63 6F 6D ...    274  WELCOME_MESSAGE DC.B 'Welcome to our Team wild pokemon disassembly!!', CR, LF, 0
000005CB= 45 6E 74 65 72 20 ...    275  STARTING        DC.B 'Enter the starting location: ', 0
000005E9= 45 6E 74 65 72 20 ...    276  ENDING          DC.B 'Enter the ending locaiton: ', 0
00000605                           277      
00000605= 41 44 44 49 2E 00        278  ADDI_MESSAGE    DC.B 'ADDI.',0
0000060B= 4D 4F 56 45 41 2E 00     279  MOVEA_MESSAGE   DC.B 'MOVEA.',0
00000612= 4D 4F 56 45 2E 00        280  MOVE_MESSAGE    DC.B 'MOVE.',0
00000618= 4E 4F 50 00              281  NOP_MESSAGE     DC.B 'NOP',0
0000061C= 4D 4F 56 45 4D 2E 00     282  MOVEM_MESSAGE   DC.B 'MOVEM.',0
00000623= 4A 53 52 00              283  JSR_MESSAGE     DC.B 'JSR',0
00000627= 52 54 53 00              284  RTS_MESSAGE     DC.B 'RTS',0
0000062B= 43 4C 52 00              285  CLR_MESSAGE     DC.B 'CLR',0
0000062F= 41 44 44 51 2E 00        286  ADDQ_MESSAGE    DC.B 'ADDQ.',0
00000635= 42 45 51 00              287  BEQ_MESSAGE     DC.B 'BEQ',0   *//
00000639= 42 4E 45 00              288  BNE_MESSAGE     DC.B 'BNE',0   *//
0000063D= 42 43 53 00              289  BCS_MESSAGE     DC.B 'BCS',0   *//
00000641= 42 47 45 00              290  BGE_MESSAGE     DC.B 'BGE',0   *//
00000645= 42 47 54 00              291  BGT_MESSAGE     DC.B 'BGT',0   *//
00000649= 42 48 49 00              292  BHI_MESSAGE     DC.B 'BHI',0   *//
0000064D= 42 4C 45 00              293  BLE_MESSAGE     DC.B 'BLE',0   *//
00000651= 42 4C 53 00              294  BLS_MESSAGE     DC.B 'BLS',0   *//
00000655= 42 4C 54 00              295  BLT_MESSAGE     DC.B 'BLT',0   *//
00000659= 42 4D 49 00              296  BMI_MESSAGE     DC.B 'BMI',0   *//
0000065D= 42 50 4C 00              297  BPL_MESSAGE     DC.B 'BPL',0   *//
00000661= 42 56 43 00              298  BVC_MESSAGE     DC.B 'BVC',0   *//
00000665= 42 56 53 00              299  BVS_MESSAGE     DC.B 'BVS',0   *//
00000669                           300  
00000669= 4D 4F 56 45 51 2E 00     301  MOVEQ_MESSAGE   DC.B 'MOVEQ.',0
00000670= 44 49 56 55 2E 00        302  DIVU_MESSAGE    DC.B 'DIVU.',0
00000676= 4F 52 2E 00              303  OR_MESSAGE      DC.B 'OR.',0
0000067A= 53 55 42 2E 00           304  SUB_MESSAGE     DC.B 'SUB.',0
0000067F= 43 4D 50 2E 00           305  CMP_MESSAGE     DC.B 'CMP.',0
00000684= 4D 55 4C 53 2E 00        306  MULS_MESSAGE    DC.B 'MULS.',0
0000068A= 41 4E 44 2E 00           307  AND_MESSAGE     DC.B 'AND.',0
0000068F= 41 44 44 2E 00           308  ADD_MESSAGE     DC.B 'ADD.',0
00000694= 41 44 44 41 2E 00        309  ADDA_MESSAGE    DC.B 'ADDA.',0
0000069A= 4C 53 4C 2E 00           310  LSL_MESSAGE     DC.B 'LSL.',0 *//
0000069F= 41 53 4C 2E 00           311  ASL_MESSAGE     DC.B 'ASL.',0
000006A4= 52 4F 4C 2E 00           312  ROL_MESSAGE     DC.B 'ROL.',0
000006A9= 4C 53 52 2E 00           313  LSR_MESSAGE     DC.B 'LSR.',0 *//
000006AE= 41 53 52 2E 00           314  ASR_MESSAGE     DC.B 'ASR.',0
000006B3= 52 4F 52 2E 00           315  ROR_MESSAGE     DC.B 'ROR.',0
000006B8= 42 20 20 20 20 00        316  SIZE_B_PRINT    DC.B 'B    ',0
000006BE= 57 20 20 20 20 00        317  SIZE_W_PRINT    DC.B 'W    ',0
000006C4= 4C 20 20 20 20 00        318  SIZE_L_PRINT    DC.B 'L    ',0
000006CA= 23 00                    319  POUND_SIGN      DC.B '#',0
000006CC= 24 00                    320  HEX_SIGN        DC.B '$',0
000006CE                           321  
000006CE= 44 00                    322  D_REGISTER      DC.B 'D',0
000006D0= 41 00                    323  A_REGISTER      DC.B 'A',0
000006D2= 28 41 00                 324  IA_START        DC.B '(A',0
000006D5= 29 00                    325  IA_END          DC.B ')',0
000006D7= 28 41 00                 326  A_PI_START      DC.B '(A',0
000006DA= 29 2B 00                 327  A_PI_END        DC.B ')+',0
000006DD= 2D 28 41 00              328  A_PD_START      DC.B '-(A',0
000006E1= 29 00                    329  A_PD_END        DC.B ')',0
000006E3                           330  
000006E3                           331  
000006E3                           332  
000006E3                           333  
000006E3                           334  
000006E3                           335  
000006E3                           336  -------------------- end include --------------------
000006E3                           337       
000006E3                           338          
000006E3                           339      
000006E3                           340                 END   $400 

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABSOLUTE_LONG       580
ABSOLUTE_SHORT      566
ADDA_MESSAGE        694
ADDI_MESSAGE        605
ADDQ_MESSAGE        62F
ADDRESS_PD          4FC
ADDRESS_PI          4D2
ADDRESS_REGISTER    48C
ADDRESS_W_DISPLACEMENT  526
ADDRESS_W_INDEX     526
ADD_MESSAGE         68F
AND_MESSAGE         68A
ASL_MESSAGE         69F
ASR_MESSAGE         6AE
A_PD_END            6E1
A_PD_START          6DD
A_PI_END            6DA
A_PI_START          6D7
A_REGISTER          6D0
BCS_MESSAGE         63D
BEQ_MESSAGE         635
BGE_MESSAGE         641
BGT_MESSAGE         645
BHI_MESSAGE         649
BLE_MESSAGE         64D
BLS_MESSAGE         651
BLT_MESSAGE         655
BMI_MESSAGE         659
BNE_MESSAGE         639
BPL_MESSAGE         65D
BVC_MESSAGE         661
BVS_MESSAGE         665
CLR_MESSAGE         62B
CMP_MESSAGE         67F
CODE000             450
CODE001             454
CODE010             458
CODE011             45C
CODE100             460
CODE101             464
CODE110             468
CODE111             46C
CR                  D
DATA_REGISTER       470
DIVU_MESSAGE        670
DONE                59A
D_REGISTER          6CE
ENDING              5E9
EXAMPLE             606
GROUP_111           526
HEX_SIGN            6CC
IA_END              6D5
IA_START            6D2
IMMEDIATE           59A
INDIRECT_ADDRESS    4A8
JMP_TABLE_EA        420
JMP_TABLE_EA_111    534
JSR_MESSAGE         623
LF                  A
LSL_MESSAGE         69A
LSR_MESSAGE         6A9
MOVEA_MESSAGE       60B
MOVEM_MESSAGE       61C
MOVEQ_MESSAGE       669
MOVE_MESSAGE        612
MULS_MESSAGE        684
NOP_MESSAGE         618
OR_MESSAGE          676
PC_W_DISPLACEMENT   566
PC_W_INDEX          566
POUND_SIGN          6CA
REG000              55A
REG001              55E
REG010              552
REG011              556
REG100              562
ROL_MESSAGE         6A4
ROR_MESSAGE         6B3
RTS_MESSAGE         627
SIZE_B_PRINT        6B8
SIZE_L_PRINT        6C4
SIZE_W_PRINT        6BE
START               40A
STARTING            5CB
SUB_MESSAGE         67A
WELCOME_MESSAGE     59A
